<title>="advanced programming"
<content>="
This course is optional.
During this course, I learned about data structures and algorithms.
Wish I could use what I learned while I was participating in projects or contests. 
"

<title>="data structure"
<content>="
Each kind of data structure has distinct ways and rules of storing, inputting, and outputting data.
Learning about this knowledge can help me to decide which data structure I should choose when I meet any situation.
Using appropriate data structure can help us save time or memory.
"

<title>="stack"
<content>="
*Last-In-First-Out, LIFO (=First-In-Last-Out, FILO)
"

<title>="queue"
<content>="
*First-In-First-Out, FIFO (=Las-In-Last-Out, LILO)
"

<title>="linked list"
<content>="
*Linear Data Structure
*store in memory randomly and discontinuously
*easy to insert and delete data
*cannot access data randomly, thus must search data step by step 
"

<title>="algorithms"
<content>="
Algorithms are logical thinking.
Using different algorithms can help us save time or memory and reach our goal.   
"

<title>="sort"
<content>="
Sorting means arranging data from big to small or from small to big. 
Sorting data can help us analyze them and find the required data conveniently.
I learned bubble sort, selection sort, and insertion sort in this course.
"

<title>="insertion sort"
<content>="
repeat these two steps until the data are all sorted
1. read data in the sequence of unsorted data
2. insert the data into an appropriate position in the sorted data.
*O(n)  
"

<title>="selection sort"
<content>="
repeat these two steps until the data are all sorted
1. find the smallest or the biggest data from the unsorted data
2. exchange the data we find and the front data in the unsorted data
*O(n^2)
"

<title>="bubble sort"
<content>="
repeat the step until the data are all sorted
1. compare the two adjacent data, and if they don't meet the required order, exchange the two data
*O(n)
"

<title>="search"
<content>="
Searching means finding the required data by comparing.
I learned sequential search and binary search in this course.
"

<title>="sequential search"
<content>="
compared the required data with the data from a group of data
*the data don't need to be sorted
*O(n)
"

<title>="binary search"
<content>="
repeat the two steps until the data is found
1.divide the sorted data(the data are from big to small) into two groups
2. check the data
    if the required data is equal to the middle, it means we find it\n\t
    if the required data is bigger than the middle, the required data may be in the right
    if the required data is bigger than the middle, the required data may be in the left
*the data need to be sorted before search\n
*O(logn)
"

<title>="others"
<content>="
In addition to sorting and searching, I also learned other algorithms such as greedy and divide and conquer.
"

<title>="greedy"
<content>="
*choose the best policy at each movement
"

<title>="divide and conquer"
<content>="
divide
    divide the whole problem into small problems
conquer
    solve the small problems, then decide whether to merge the small problems or not according to the requirement
"
